---
import { DATABASE_ID, AUTHORS_DB_ID } from '../../../server-constants.ts'
import {
  getPostsByPage,
  getRankedPosts,
  getAllTags,
  getNumberOfPages,
} from '../../../lib/notion/client.ts'
import Layout from '../../../layouts/Layout.astro'
import NoContents from '../../../components/NoContents.astro'
import PostDate from '../../../components/PostDate.astro'
import PostTags from '../../../components/PostTags.astro'
import PostTitle from '../../../components/PostTitle.astro'
import PostFeaturedImage from '../../../components/PostFeaturedImage.astro'
import PostExcerpt from '../../../components/PostExcerpt.astro'
import ReadMoreLink from '../../../components/ReadMoreLink.astro'
import Pagination from '../../../components/Pagination.astro'
import BlogPostsLink from '../../../components/BlogPostsLink.astro'
import BlogTagsLink from '../../../components/BlogTagsLink.astro'
import styles from '../../../styles/blog.module.css'

export async function getStaticPaths() {
  const numberOfPages = await getNumberOfPages(AUTHORS_DB_ID)
  let params = []
  for (let i = 2; i <= numberOfPages; i++) {
    params.push({ params: { page: i.toString() } })
  }
  return params
}

const { page } = Astro.params

const [persons, rankedPosts, tags, numberOfPages] = await Promise.all([
  getPostsByPage(AUTHORS_DB_ID, parseInt(page, 10)),
  getRankedPosts(DATABASE_ID),
  getAllTags(DATABASE_ID),
  getNumberOfPages(AUTHORS_DB_ID),
])
---

<Layout title={`Persons ${page}/${numberOfPages}`} path={`/persons/page/${page}`}>
  <div slot="main" class={styles.main}>
    {
      persons.length === 0 ? (
        <NoContents contents={persons} />
      ) : (
        persons.map((person) => (
          <div class={styles.post}>
            <PostDate post={person} />
            <PostTags post={person} />
            <PostTitle post={person} basePath="persons" />
            <PostFeaturedImage post={person} />
            <PostExcerpt post={person} />
            <ReadMoreLink post={person} basePath="persons" />
          </div>
        ))
      )
    }

    <footer>
      <Pagination
        basePath="/persons"
        currentPage={parseInt(page, 10)}
        numberOfPages={numberOfPages}
        tag=""
      />
    </footer>
  </div>

  <div slot="aside" class={styles.aside}>
    <BlogPostsLink heading="Recommended" posts={rankedPosts} />
    <BlogTagsLink heading="Categories" tags={tags} />
  </div>
</Layout>

<style>
  .page-container {
    margin: 0;
    line-height: 1.3;
    font-size: 1.2rem;
    font-weight: normal;
  }
  @media (max-width: 640px) {
    .page-container {
      font-size: 1.15rem;
    }
  }
</style>